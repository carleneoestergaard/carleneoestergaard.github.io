(self.webpackChunkinviso=self.webpackChunkinviso||[]).push([[7395],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return u},kt:function(){return d}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=c(r),d=o,x=m["".concat(s,".").concat(d)]||m[d]||p[d]||a;return r?n.createElement(x,i(i({ref:t},u),{},{components:r})):n.createElement(x,i({ref:t},u))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var c=2;c<a;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},3653:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return l},metadata:function(){return s},toc:function(){return c},default:function(){return p}});var n=r(2122),o=r(9756),a=(r(7294),r(3905)),i=["components"],l={sidebar_position:4},s={unversionedId:"AlteryxAPI/frompowershell",id:"AlteryxAPI/frompowershell",isDocsHomePage:!1,title:"API from Powershell",description:"How to execute Alteryx workflows with Powershell",source:"@site/docs/AlteryxAPI/frompowershell.md",sourceDirName:"AlteryxAPI",slug:"/AlteryxAPI/frompowershell",permalink:"/build/docs/AlteryxAPI/frompowershell",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/AlteryxAPI/frompowershell.md",version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"API from Python",permalink:"/build/docs/AlteryxAPI/frompython"},next:{title:"Create a Page",permalink:"/build/docs/tutorial-basics/create-a-page"}},c=[{value:"How to execute Alteryx workflows with Powershell",id:"how-to-execute-alteryx-workflows-with-powershell",children:[]}],u={toc:c};function p(e){var t=e.components,r=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"how-to-execute-alteryx-workflows-with-powershell"},"How to execute Alteryx workflows with Powershell"),(0,a.kt)("p",null,"All you will need to change are the 4 parameters at the top"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},'# Set User parameters:\n$ServerURL = "https://alteryx.inviso.dk/gallery/api/v1"\n$WorkflowID = "xxxxxxxxxxxxxx"\n$ConsumerKey = "xxxxxxxxxxxxx"\n$ConsumerSecret = "xxxxxxxxxxxxx"\n\n# Set Additional parameters:\n$OauthMethod = "POST"\n$OauthUrl = "$ServerURL/workflows/$WorkflowID/jobs/"\n$Nonce = -join ((48..57) + (97..122) | Get-Random -Count 6 | % {[char]$_})\n$Timestamp = [int64](([datetime]::UtcNow)-(get-date "1/1/1970")).TotalSeconds\n$Timestamp\n[regex]$regex=\'(%[a-f0-9]{2})\'\n$question = "?"\n$headers = @{\n\'Content-Type\' = \'application/json\'\n}\n\n# Build Base String:\n$params = "oauth_consumer_key=$ConsumerKey&oauth_nonce=$Nonce&oauth_signature_method=HMAC-SHA1&oauth_timestamp=$Timestamp&oauth_version=1.0"\n$paramsEncoded = $regex.Replace([System.Web.HttpUtility]::UrlEncode($params), {$args[0].Value.ToUpper()})\n$URLEncoded = $regex.Replace([System.Web.HttpUtility]::UrlEncode($OauthUrl), {$args[0].Value.ToUpper()})\n$basestring = "$OauthMethod&$URLEncoded&$paramsEncoded"\n\n# Create Signature:\n$hmacsha = New-Object System.Security.Cryptography.HMACSHA1\n$hmacsha.key = [Text.Encoding]::ASCII.GetBytes("$ConsumerSecret&")\n$signature = $hmacsha.ComputeHash([Text.Encoding]::ASCII.GetBytes($basestring))\n$signature = [Convert]::ToBase64String($signature)\n$signatureEncoded =  $regex.Replace([System.Web.HttpUtility]::UrlEncode($signature), {$args[0].Value.ToUpper()})\n$full_url = "$OauthUrl$question$params&oauth_signature=$signatureEncoded";\n\n# Call API:\nInvoke-RestMethod -Method $OauthMethod -Uri $full_url -Headers $headers -Body "{}"\n')))}p.isMDXComponent=!0}}]);